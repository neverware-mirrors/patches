From foo@baz Fri Nov 30 11:15:46 CET 2018
Date: Fri, 30 Nov 2018 11:15:46 +0100
To: Greg KH <gregkh@linuxfoundation.org>
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Subject: [PATCH] USB: get rid of DEVICE_ATTR() usage

Drivers should be using DEVICE_ATTR_RO() and friends, not a "raw"
DEVICE_ATTR().  Convert the remaining drivers/usb/ code to use a
specific DEVICE_ATTR_* macro instead, making it easier to audit the
correct mode on sysfs files and to make it harder to get wrong in the
future.

Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/usb/gadget/function/f_mass_storage.c |    5 -
 drivers/usb/phy/phy-fsl-usb.c                |    6 -
 drivers/usb/wusbcore/cbaf.c                  |   82 +++++++++++----------------
 3 files changed, 41 insertions(+), 52 deletions(-)

--- a/drivers/usb/gadget/function/f_mass_storage.c
+++ b/drivers/usb/gadget/function/f_mass_storage.c
@@ -2544,9 +2544,8 @@ static ssize_t file_store(struct device
 }
 
 static DEVICE_ATTR_RW(nofua);
-/* mode wil be set in fsg_lun_attr_is_visible() */
-static DEVICE_ATTR(ro, 0, ro_show, ro_store);
-static DEVICE_ATTR(file, 0, file_show, file_store);
+static DEVICE_ATTR_RW(ro);
+static DEVICE_ATTR_RW(file);
 
 /****************************** FSG COMMON ******************************/
 
--- a/drivers/usb/phy/phy-fsl-usb.c
+++ b/drivers/usb/phy/phy-fsl-usb.c
@@ -960,8 +960,8 @@ int usb_otg_start(struct platform_device
 /*
  * state file in sysfs
  */
-static ssize_t show_fsl_usb2_otg_state(struct device *dev,
-				   struct device_attribute *attr, char *buf)
+static ssize_t fsl_usb2_otg_state_show(struct device *dev,
+				       struct device_attribute *attr, char *buf)
 {
 	struct otg_fsm *fsm = &fsl_otg_dev->fsm;
 	char *next = buf;
@@ -1041,7 +1041,7 @@ static ssize_t show_fsl_usb2_otg_state(s
 	return PAGE_SIZE - size;
 }
 
-static DEVICE_ATTR(fsl_usb2_otg_state, S_IRUGO, show_fsl_usb2_otg_state, NULL);
+static DEVICE_ATTR_RO(fsl_usb2_otg_state);
 
 
 /* Char driver interface to control some OTG input */
--- a/drivers/usb/wusbcore/cbaf.c
+++ b/drivers/usb/wusbcore/cbaf.c
@@ -296,9 +296,8 @@ static int cbaf_cdid_get(struct cbaf *cb
 	return 0;
 }
 
-static ssize_t cbaf_wusb_chid_show(struct device *dev,
-					struct device_attribute *attr,
-					char *buf)
+static ssize_t wusb_chid_show(struct device *dev, struct device_attribute *attr,
+			      char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
@@ -306,9 +305,9 @@ static ssize_t cbaf_wusb_chid_show(struc
 	return sprintf(buf, "%16ph\n", cbaf->chid.data);
 }
 
-static ssize_t cbaf_wusb_chid_store(struct device *dev,
-					 struct device_attribute *attr,
-					 const char *buf, size_t size)
+static ssize_t wusb_chid_store(struct device *dev,
+			       struct device_attribute *attr,
+			       const char *buf, size_t size)
 {
 	ssize_t result;
 	struct usb_interface *iface = to_usb_interface(dev);
@@ -339,11 +338,10 @@ static ssize_t cbaf_wusb_chid_store(stru
 		return result;
 	return size;
 }
-static DEVICE_ATTR(wusb_chid, 0600, cbaf_wusb_chid_show, cbaf_wusb_chid_store);
+static DEVICE_ATTR_RW(wusb_chid);
 
-static ssize_t cbaf_wusb_host_name_show(struct device *dev,
-					struct device_attribute *attr,
-					char *buf)
+static ssize_t wusb_host_name_show(struct device *dev,
+				   struct device_attribute *attr, char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
@@ -351,9 +349,9 @@ static ssize_t cbaf_wusb_host_name_show(
 	return scnprintf(buf, PAGE_SIZE, "%s\n", cbaf->host_name);
 }
 
-static ssize_t cbaf_wusb_host_name_store(struct device *dev,
-					 struct device_attribute *attr,
-					 const char *buf, size_t size)
+static ssize_t wusb_host_name_store(struct device *dev,
+				    struct device_attribute *attr,
+				    const char *buf, size_t size)
 {
 	ssize_t result;
 	struct usb_interface *iface = to_usb_interface(dev);
@@ -365,12 +363,11 @@ static ssize_t cbaf_wusb_host_name_store
 
 	return size;
 }
-static DEVICE_ATTR(wusb_host_name, 0600, cbaf_wusb_host_name_show,
-					 cbaf_wusb_host_name_store);
+static DEVICE_ATTR_RW(wusb_host_name);
 
-static ssize_t cbaf_wusb_host_band_groups_show(struct device *dev,
-					       struct device_attribute *attr,
-					       char *buf)
+static ssize_t wusb_host_band_groups_show(struct device *dev,
+					  struct device_attribute *attr,
+					  char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
@@ -378,9 +375,9 @@ static ssize_t cbaf_wusb_host_band_group
 	return scnprintf(buf, PAGE_SIZE, "0x%04x\n", cbaf->host_band_groups);
 }
 
-static ssize_t cbaf_wusb_host_band_groups_store(struct device *dev,
-						struct device_attribute *attr,
-						const char *buf, size_t size)
+static ssize_t wusb_host_band_groups_store(struct device *dev,
+					   struct device_attribute *attr,
+					   const char *buf, size_t size)
 {
 	ssize_t result;
 	struct usb_interface *iface = to_usb_interface(dev);
@@ -395,10 +392,7 @@ static ssize_t cbaf_wusb_host_band_group
 
 	return size;
 }
-
-static DEVICE_ATTR(wusb_host_band_groups, 0600,
-		   cbaf_wusb_host_band_groups_show,
-		   cbaf_wusb_host_band_groups_store);
+static DEVICE_ATTR_RW(wusb_host_band_groups);
 
 static const struct wusb_cbaf_device_info cbaf_device_info_defaults = {
 	.Length_hdr               = WUSB_AR_Length,
@@ -408,8 +402,8 @@ static const struct wusb_cbaf_device_inf
 	.DeviceFriendlyName_hdr   = WUSB_AR_DeviceFriendlyName,
 };
 
-static ssize_t cbaf_wusb_cdid_show(struct device *dev,
-				   struct device_attribute *attr, char *buf)
+static ssize_t wusb_cdid_show(struct device *dev, struct device_attribute *attr,
+			      char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
@@ -417,9 +411,9 @@ static ssize_t cbaf_wusb_cdid_show(struc
 	return sprintf(buf, "%16ph\n", cbaf->cdid.data);
 }
 
-static ssize_t cbaf_wusb_cdid_store(struct device *dev,
-				struct device_attribute *attr,
-				const char *buf, size_t size)
+static ssize_t wusb_cdid_store(struct device *dev,
+			       struct device_attribute *attr, const char *buf,
+			       size_t size)
 {
 	ssize_t result;
 	struct usb_interface *iface = to_usb_interface(dev);
@@ -446,32 +440,28 @@ static ssize_t cbaf_wusb_cdid_store(stru
 
 	return size;
 }
-static DEVICE_ATTR(wusb_cdid, 0600, cbaf_wusb_cdid_show, cbaf_wusb_cdid_store);
+static DEVICE_ATTR_RW(wusb_cdid);
 
-static ssize_t cbaf_wusb_device_band_groups_show(struct device *dev,
-						 struct device_attribute *attr,
-						 char *buf)
+static ssize_t wusb_device_band_groups_show(struct device *dev,
+					    struct device_attribute *attr,
+					    char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
 
 	return scnprintf(buf, PAGE_SIZE, "0x%04x\n", cbaf->device_band_groups);
 }
+static DEVICE_ATTR_RO(wusb_device_band_groups);
 
-static DEVICE_ATTR(wusb_device_band_groups, 0600,
-		   cbaf_wusb_device_band_groups_show,
-		   NULL);
-
-static ssize_t cbaf_wusb_device_name_show(struct device *dev,
-					struct device_attribute *attr,
-					char *buf)
+static ssize_t wusb_device_name_show(struct device *dev,
+				     struct device_attribute *attr, char *buf)
 {
 	struct usb_interface *iface = to_usb_interface(dev);
 	struct cbaf *cbaf = usb_get_intfdata(iface);
 
 	return scnprintf(buf, PAGE_SIZE, "%s\n", cbaf->device_name);
 }
-static DEVICE_ATTR(wusb_device_name, 0600, cbaf_wusb_device_name_show, NULL);
+static DEVICE_ATTR_RO(wusb_device_name);
 
 static const struct wusb_cbaf_cc_data cbaf_cc_data_defaults = {
 	.AssociationTypeId_hdr    = WUSB_AR_AssociationTypeId,
@@ -522,9 +512,9 @@ static int cbaf_cc_upload(struct cbaf *c
 	return result;
 }
 
-static ssize_t cbaf_wusb_ck_store(struct device *dev,
-				  struct device_attribute *attr,
-				  const char *buf, size_t size)
+static ssize_t wusb_ck_store(struct device *dev,
+			     struct device_attribute *attr,
+			     const char *buf, size_t size)
 {
 	ssize_t result;
 	struct usb_interface *iface = to_usb_interface(dev);
@@ -552,7 +542,7 @@ static ssize_t cbaf_wusb_ck_store(struct
 
 	return size;
 }
-static DEVICE_ATTR(wusb_ck, 0600, NULL, cbaf_wusb_ck_store);
+static DEVICE_ATTR_WO(wusb_ck);
 
 static struct attribute *cbaf_dev_attrs[] = {
 	&dev_attr_wusb_host_name.attr,
